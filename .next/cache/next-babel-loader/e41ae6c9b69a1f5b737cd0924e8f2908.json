{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/priscilla/www/NEW_DIGITAL_PROGRAM/frontend-ecommerce-qrcode/src/pages/cart.tsx\";\nimport Select from \"@/components/Basics/Select\";\nimport Header from \"@/components/Header\";\nimport { Address } from \"@/components/Product/styles\";\nimport { useCart } from '@/context/Cart/CartContext';\nimport { ThumbnailSmall } from \"@/styles/genericStyles\";\nimport { Card, Container, Info } from \"@/styles/pages/Cart/styles\";\nimport PrismicDOM from 'prismic-dom';\nimport { useEffect, useState } from \"react\";\nimport { FiMapPin, FiTruck } from \"react-icons/fi\";\nexport default function Cart() {\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(0);\n  const {\n    cart,\n    setCart\n  } = useCart();\n  useEffect(() => {\n    console.log(cart);\n  }, [cart]); // setCart({ type: 'ADD', payload: item });\n  // setCart({ type: 'REMOVE', payload: product.id });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: cart.map(item => /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(ThumbnailSmall, {\n          src: item.product.data.thumbnail.url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Info, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: PrismicDOM.RichText.asText(item.product.data.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Address, {\n            children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.address.street, \", \", item.address.neighborhood, \", \", item.address.city, \" - \", item.address.state]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Address, {\n            children: [/*#__PURE__*/_jsxDEV(FiTruck, {\n              size: 15\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Chegar\\xE1 \", \" por R$ \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            label: \"Quantidade:\",\n            list: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n            value: item.quantity,\n            onChange: e => setQuantity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, item.product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/priscilla/www/NEW_DIGITAL_PROGRAM/frontend-ecommerce-qrcode/src/pages/cart.tsx"],"names":["Select","Header","Address","useCart","ThumbnailSmall","Card","Container","Info","PrismicDOM","useEffect","useState","FiMapPin","FiTruck","Cart","quantity","setQuantity","cart","setCart","console","log","map","item","product","data","thumbnail","url","RichText","asText","name","address","street","neighborhood","city","state","e","target","value","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,QAAsC,4BAAtC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBd,OAAO,EAA/B;AAEAM,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT,CAJ6B,CAO7B;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,gBACGA,IAAI,CAACI,GAAL,CAASC,IAAI,iBACZ,QAAC,IAAD;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,GAAG,EAAEA,IAAI,CAACC,OAAL,CAAaC,IAAb,CAAkBC,SAAlB,CAA4BC,GAAjD;AAAsD,UAAA,GAAG,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA,kCACE;AAAA,sBAAOjB,UAAU,CAACkB,QAAX,CAAoBC,MAApB,CAA2BN,IAAI,CAACC,OAAL,CAAaC,IAAb,CAAkBK,IAA7C;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,yBAAIP,IAAI,CAACQ,OAAL,CAAaC,MAAjB,QAA2BT,IAAI,CAACQ,OAAL,CAAaE,YAAxC,QAAwDV,IAAI,CAACQ,OAAL,CAAaG,IAArE,SAA8EX,IAAI,CAACQ,OAAL,CAAaI,KAA3F;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,QAAC,OAAD;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAUE,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,aADR;AAEE,YAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,CAFR;AAGE,YAAA,KAAK,EAAEZ,IAAI,CAACP,QAHd;AAIE,YAAA,QAAQ,EAAGoB,CAAD,IAAOnB,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAWf,IAAI,CAACC,OAAL,CAAae,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA6BD","sourcesContent":["import Select from \"@/components/Basics/Select\";\nimport Header from \"@/components/Header\";\nimport { Address } from \"@/components/Product/styles\";\nimport { useCart } from '@/context/Cart/CartContext';\nimport { ThumbnailSmall } from \"@/styles/genericStyles\";\nimport { Card, Container, Info } from \"@/styles/pages/Cart/styles\";\nimport PrismicDOM from 'prismic-dom';\nimport { useEffect, useState } from \"react\";\nimport { FiMapPin, FiTruck } from \"react-icons/fi\";\n\nexport default function Cart() {\n  const [quantity, setQuantity] = useState(0);\n  const {cart, setCart} = useCart();\n  \n  useEffect(() => {\n    console.log(cart);\n  }, [cart])\n  // setCart({ type: 'ADD', payload: item });\n  // setCart({ type: 'REMOVE', payload: product.id });\n\n  return (\n    <>\n      <Header />\n      <Container>\n        {cart.map(item => (\n          <Card key={item.product.id}>\n            <ThumbnailSmall src={item.product.data.thumbnail.url} alt=\"\"/>\n            <Info>\n              <span>{PrismicDOM.RichText.asText(item.product.data.name)}</span>\n              <Address>\n                <FiMapPin size={15}/>\n                <p>{item.address.street}, {item.address.neighborhood}, {item.address.city} - {item.address.state}</p>\n              </Address>\n              <Address>\n                <FiTruck size={15}/>\n                <p>Chegar√° {} por R$ {}</p>\n              </Address>\n              <Select \n                label=\"Quantidade:\" \n                list={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]} \n                value={item.quantity} \n                onChange={(e) => setQuantity(e.target.value)}\n              />\n            </Info>\n          </Card>\n        ))}\n      </Container>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}