{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/priscilla/www/NEW_DIGITAL_PROGRAM/frontend-ecommerce-qrcode/src/components/Increment/index.tsx\";\nimport React, { memo, useState } from 'react';\nimport { Container } from './styles';\n\nconst Increment = ({\n  initial,\n  max = 100,\n  min = 0,\n  vertical = false\n}) => {\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(initial.toString());\n\n  function increment() {\n    if (parseInt(quantity) < max) {\n      let sum = parseInt(quantity) + 1;\n      setQuantity(sum.toString());\n    }\n  }\n\n  function decrement() {\n    if (parseInt(quantity) > min) {\n      let subtract = parseInt(quantity) - 1;\n      setQuantity(subtract.toString());\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => increment(),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => decrement(),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default /*#__PURE__*/memo(Increment);","map":{"version":3,"sources":["/home/priscilla/www/NEW_DIGITAL_PROGRAM/frontend-ecommerce-qrcode/src/components/Increment/index.tsx"],"names":["React","memo","useState","Container","Increment","initial","max","min","vertical","quantity","setQuantity","toString","increment","parseInt","sum","decrement","subtract"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAUA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,GAAG,GAAG,GAAjB;AAAsBC,EAAAA,GAAG,GAAG,CAA5B;AAA+BC,EAAAA,QAAQ,GAAG;AAA1C,CAAD,KAAuD;AACjG,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAACG,OAAO,CAACM,QAAR,EAAD,CAAxC;;AAEA,WAASC,SAAT,GAAqB;AACnB,QAAIC,QAAQ,CAACJ,QAAD,CAAR,GAAqBH,GAAzB,EAA8B;AAC5B,UAAIQ,GAAG,GAAGD,QAAQ,CAACJ,QAAD,CAAR,GAAqB,CAA/B;AACAC,MAAAA,WAAW,CAACI,GAAG,CAACH,QAAJ,EAAD,CAAX;AACD;AACF;;AAED,WAASI,SAAT,GAAqB;AACnB,QAAIF,QAAQ,CAACJ,QAAD,CAAR,GAAqBF,GAAzB,EAA8B;AAC5B,UAAIS,QAAQ,GAAGH,QAAQ,CAACJ,QAAD,CAAR,GAAqB,CAApC;AACAC,MAAAA,WAAW,CAACM,QAAQ,CAACL,QAAT,EAAD,CAAX;AACD;AACF;;AAED,sBACE,QAAC,SAAD;AAAA,4BACA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMC,SAAS,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMM,SAAS,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;AA0BA,4BAAed,IAAI,CAACG,SAAD,CAAnB","sourcesContent":["import React, { memo, useState } from 'react';\nimport { Container } from './styles';\n\ninterface IncrementProps {\n  // title: string;\n  initial?: number;\n  max?: number;\n  min?: number;\n  vertical?: boolean;\n}\n\nconst Increment: React.FC<IncrementProps> = ({ initial, max = 100, min = 0, vertical = false }) => {\n  const [quantity, setQuantity] = useState(initial.toString());\n  \n  function increment() {\n    if (parseInt(quantity) < max) {\n      let sum = parseInt(quantity) + 1;\n      setQuantity(sum.toString());\n    }\n  }\n\n  function decrement() {\n    if (parseInt(quantity) > min) {\n      let subtract = parseInt(quantity) - 1;\n      setQuantity(subtract.toString());\n    }\n  }\n\n  return (\n    <Container >\n    <button type=\"button\" onClick={() => increment()}>+</button>\n    <p>{quantity}</p>\n    <button type=\"button\" onClick={() => decrement()}>-</button>\n    </Container>\n  );\n}\n\nexport default memo(Increment)\n"]},"metadata":{},"sourceType":"module"}